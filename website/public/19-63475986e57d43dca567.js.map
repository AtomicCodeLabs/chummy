{"version":3,"sources":["webpack:///./node_modules/@firebase/storage/dist/index.esm.js"],"names":["_super","FirebaseStorageError","code","message","_this","call","this","prependCode","customData","serverResponse","Object","setPrototypeOf","prototype","codeEquals","defineProperty","get","enumerable","configurable","set","Code","unknown","cannotSliceBlob","invalidArgument","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","parts","DataURLParts","base64","rest","value","decoded","decodeURIComponent","e","percentEncodedBytes_","dataUrl","dataURLContentType_","b","i","length","c","charCodeAt","push","Uint8Array","hasMinus","indexOf","hasUnder","hasPlus","hasSlash","replace","bytes","atob","array","dataURL","matches","match","middle","s","end","substring","ErrorCode","TaskEvent","STATE_CHANGED","InternalTaskState","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","state","NetworkXhrIo","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","url","method","body","headers","open","undefined","key","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","isString","p","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","args","_i","arguments","bb","append","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","size_","type_","slice","startByte","endByte","sliced","blob","start","webkitSlice","mozSlice","sliceBlob","buffer","blobby","map","val","apply","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","Location","bucket","path","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","gsRegex","RegExp","httpModify","loc","firebaseStorageHost","groups","regex","indices","postModify","charAt","group","captures","exec","bucketValue","pathValue","invalidUrl","jsonObjectOrNull","obj","JSON","parse","Array","isArray","lastComponent","index","lastIndexOf","makeUrl","urlPart","makeQueryString","params","queryPart","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","Number","fromResource","service","resource","len","mapping","makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","stringify","fromResponseString","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","fromBackendResponse","RequestInfo","handler","timeout","urlParams","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","tokens","split","token","alt","downloadUrlFromResourceString","sharedErrorHandler","err","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","list","delimiter","pageToken","maxResults","isRoot","listHandler","metadataForUpload_","metadataClone","assign","determineContentType_","ResumableUploadStatus","current","total","finalized","checkResumeHeader_","allowed","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","Math","min","maxUploadRetryTime","uploadStatus","newCurrent","Observer","nextOrObserver","error","complete","next","observer","UploadTaskSnapshot","bytesTransferred","totalBytes","task","ref","f","argsToForward","then","UploadTask","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","_transition","_metadataErrorHandler","_promise","reject","_start","_makeProgressCallback","sizeBefore","loaded","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","callback","storage","getAuthToken","authToken","metadataForUpload","createResumableUpload","_location","createRequest","makeRequest","getPromise","sizeString","isNaN","getResumableUploadStatus","statusRequest","uploadRequest","newStatus","_increaseMultiplier","metadataRequest","boundary","str","random","genBoundary","metadata_","preBlobPart","postBlobPart","multipartUpload","multipartRequest","transferred","old","_notifyObservers","cancel","wasPaused","externalState","on","completed","_addObserver","_removeObserver","onFulfilled","onRejected","catch","_notifyObserver","splice","_finishPromise","triggered","bind","snapshot","resume","valid","pause","Reference","_service","newRef","newPath","_throwIfRoot","listAll","accumulator","listAllHelper","nextPage","label","list$1","sent","options","op","updateMetadata$1","updateMetadata","getDownloadURL","getDownloadUrl","deleteObject$1","_xhr","_text","deleteObject","getChild","childPath","canonicalChildPath","filter","component","join","child","UploadTaskSnapshotCompat","_delegate","UploadTaskCompat","_snapshot","wrappedNextOrObserver","taskSnapshot","ListResultCompat","ReferenceCompat","root","parent","put","uploadBytesResumable","putString","uploadString","r","getMetadata$1","delete","FailRequest","promise_","_appDelete","NetworkRequest","errorCallback","pool","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","resolve_","reject_","start_","self","backoffDone","requestWentThrough","wasSuccessCode","result","canceled","RequestEndStatus","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","waitMillis","mustStop","stopped","stop","wasTimeout","clearTimeout","backoffCallback","progressListener","hitServer","isRetryStatusCode_","successCode","wasCanceled","progressEvent","lengthComputable","appDelete","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","appId","addGmpidHeader_","addAuthHeader_","version","SDK_VERSION","addVersionHeader_","isUrl","test","refFromPath","_bucket","includes","serviceOrRef","pathOrUrl","instance","namespaceExports","StorageService","app","_authProvider","_pool","_url","config","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","time","POSITIVE_INFINITY","auth","tokenData","getImmediate","optional","getToken","accessToken","_delete","request","clear","request_1","add","StorageServiceCompat","INTERNAL","refFromURL","setMaxUploadRetryTime","setMaxOperationRetryTime","factory","container","getProvider","authProvider","Storage","registerComponent","setServiceProps","setMultipleInstances","registerVersion"],"mappings":"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","file":"19-63475986e57d43dca567.js","sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator, __assign, __spreadArrays } from 'tslib';\nimport { FirebaseError } from '@firebase/util';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\n\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\nvar FirebaseStorageError =\n/** @class */\nfunction (_super) {\n  __extends(FirebaseStorageError, _super);\n\n  function FirebaseStorageError(code, message) {\n    var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\n\n    _this.customData = {\n      serverResponse: null\n    }; // Without this, `instanceof FirebaseStorageError`, in tests for example,\n    // returns false.\n\n    Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\n    return _this;\n  }\n\n  FirebaseStorageError.prototype.codeEquals = function (code) {\n    return prependCode(code) === this.code;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    get: function get() {\n      if (this.customData.serverResponse) {\n        return this.message + \"\\n\" + this.customData.serverResponse;\n      } else {\n        return this.message;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    get: function get() {\n      return this.customData.serverResponse;\n    },\n    set: function set(serverResponse) {\n      this.customData.serverResponse = serverResponse;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}(FirebaseError);\n\nvar Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error',\n  UNSUPPORTED_ENVIRONMENT: 'unsupported-environment'\n};\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction noDefaultBucket() {\n  return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' + \"found. Did you set the '\" + CONFIG_STORAGE_BUCKET_KEY + \"' property when initializing the app?\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(message) {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, message);\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message - A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nvar StringData =\n/** @class */\nfunction () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar DataURLParts =\n/** @class */\nfunction () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\n\n\nvar NetworkXhrIo =\n/** @class */\nfunction () {\n  function NetworkXhrIo() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('load', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (headers !== undefined) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return NetworkXhrIo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar XhrIoPool =\n/** @class */\nfunction () {\n  function XhrIoPool() {}\n\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n\n  return XhrIoPool;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isJustDef(p) {\n  return p !== void 0;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isNonArrayObject(p) {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n\nfunction validateNumber(argument, minValue, maxValue, value) {\n  if (value < minValue) {\n    throw new FirebaseStorageError(Code.INVALID_ARGUMENT, \"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\n  }\n\n  if (value > maxValue) {\n    throw new FirebaseStorageError(Code.INVALID_ARGUMENT, \"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new FirebaseStorageError(Code.UNSUPPORTED_ENVIRONMENT, \"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\n\n\nvar FbsBlob =\n/** @class */\nfunction () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function get() {\n      return this.path_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function get() {\n      return this.path.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\n    var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\n    var firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\n    var cloudStoragePath = '([^?#]*)';\n    var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\n    var cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart) {\n  return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, service) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return service.makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(service, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, service);\n  return metadata;\n}\n\nfunction fromResourceString(service, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(service, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(service, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n      var reference = service.makeStorageReference(new Location(bucket, item['name']));\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(service, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\n\nvar RequestInfo =\n/** @class */\nfunction () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list(service, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getDownloadUrl(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata(service, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject(service, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\n\n\nvar ResumableUploadStatus =\n/** @class */\nfunction () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = service.maxUploadRetryTime;\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(service, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error;\n      this.complete = complete;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n\n  return Observer;\n}();\n\nvar UploadTaskSnapshot =\n/** @class */\nfunction () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  return UploadTaskSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\n\n\nvar UploadTask =\n/** @class */\nfunction () {\n  /**\r\n   * @param ref - The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob - The blob to upload.\r\n   */\n  function UploadTask(ref, blob, metadata) {\n    var _this = this;\n\n    if (metadata === void 0) {\n      metadata = null;\n    }\n    /**\r\n     * @internal\r\n     */\n\n\n    this._transferred = 0;\n    this._needToFetchStatus = false;\n    this._needToFetchMetadata = false;\n    this._observers = [];\n    this._error = undefined;\n    this._uploadUrl = undefined;\n    this._request = undefined;\n    this._chunkMultiplier = 1;\n    this._resolve = undefined;\n    this._reject = undefined;\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n\n    this._errorHandler = function (error) {\n      _this._request = undefined;\n      _this._chunkMultiplier = 1;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this._needToFetchStatus = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this._error = error;\n\n        _this._transition(InternalTaskState.ERROR);\n      }\n    };\n\n    this._metadataErrorHandler = function (error) {\n      _this._request = undefined;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.completeTransitions_();\n      } else {\n        _this._error = error;\n\n        _this._transition(InternalTaskState.ERROR);\n      }\n    };\n\n    this._promise = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n\n      _this._start();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this._promise.then(null, function () {});\n  }\n\n  UploadTask.prototype._makeProgressCallback = function () {\n    var _this = this;\n\n    var sizeBefore = this._transferred;\n    return function (loaded) {\n      return _this._updateProgress(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype._shouldDoResumable = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype._start = function () {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n\n    if (this._request !== undefined) {\n      return;\n    }\n\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  };\n\n  UploadTask.prototype._resolveToken = function (callback) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    this._ref.storage.getAuthToken().then(function (authToken) {\n      switch (_this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n\n        case InternalTaskState.CANCELING:\n          _this._transition(InternalTaskState.CANCELED);\n\n          break;\n\n        case InternalTaskState.PAUSING:\n          _this._transition(InternalTaskState.PAUSED);\n\n          break;\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype._createResumable = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\n\n      var createRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\n\n      _this._request = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this._request = undefined;\n        _this._uploadUrl = url;\n        _this._needToFetchStatus = false;\n\n        _this.completeTransitions_();\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._fetchStatus = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this._uploadUrl;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\n\n      var statusRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\n\n      _this._request = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this._request = undefined;\n\n        _this._updateProgress(status.current);\n\n        _this._needToFetchStatus = false;\n\n        if (status.finalized) {\n          _this._needToFetchMetadata = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._continueUpload = function () {\n    var _this = this;\n\n    var chunkSize = resumableUploadChunkSize * this._chunkMultiplier;\n    var status = new ResumableUploadStatus(this._transferred, this._blob.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this._uploadUrl;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\n      } catch (e) {\n        _this._error = e;\n\n        _this._transition(InternalTaskState.ERROR);\n\n        return;\n      }\n\n      var uploadRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\n\n      _this._request = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this._increaseMultiplier();\n\n        _this._request = undefined;\n\n        _this._updateProgress(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this._metadata = newStatus.metadata;\n\n          _this._transition(InternalTaskState.SUCCESS);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._increaseMultiplier = function () {\n    var currentSize = resumableUploadChunkSize * this._chunkMultiplier; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  };\n\n  UploadTask.prototype._fetchMetadata = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo = getMetadata(_this._ref.storage, _this._ref._location, _this._mappings);\n\n      var metadataRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\n\n      _this._request = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this._request = undefined;\n        _this._metadata = metadata;\n\n        _this._transition(InternalTaskState.SUCCESS);\n      }, _this._metadataErrorHandler);\n    });\n  };\n\n  UploadTask.prototype._oneShotUpload = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\n\n      var multipartRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\n\n      _this._request = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this._request = undefined;\n        _this._metadata = metadata;\n\n        _this._updateProgress(_this._blob.size());\n\n        _this._transition(InternalTaskState.SUCCESS);\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._updateProgress = function (transferred) {\n    var old = this._transferred;\n    this._transferred = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  };\n\n  UploadTask.prototype._transition = function (state) {\n    if (this._state === state) {\n      return;\n    }\n\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n\n        if (wasPaused) {\n          this._notifyObservers();\n\n          this._start();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n\n        break;\n\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n\n        break;\n\n      case InternalTaskState.RUNNING:\n        this._start();\n\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    get: function get() {\n      var externalState = taskStateFromInternalTaskState(this._state);\n      return new UploadTaskSnapshot(this._transferred, this._blob.size(), externalState, this._metadata, this, this._ref);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type - The type of event to listen for.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    var _this = this;\n\n    var observer = new Observer(nextOrObserver, error, completed);\n\n    this._addObserver(observer);\n\n    return function () {\n      _this._removeObserver(observer);\n    };\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected - The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype._addObserver = function (observer) {\n    this._observers.push(observer);\n\n    this._notifyObserver(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype._removeObserver = function (observer) {\n    var i = this._observers.indexOf(observer);\n\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  };\n\n  UploadTask.prototype._notifyObservers = function () {\n    var _this = this;\n\n    this._finishPromise();\n\n    var observers = this._observers.slice();\n\n    observers.forEach(function (observer) {\n      _this._notifyObserver(observer);\n    });\n  };\n\n  UploadTask.prototype._finishPromise = function () {\n    if (this._resolve !== undefined) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          async(this._resolve.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this._reject;\n          async(toCall.bind(null, this._error))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  };\n\n  UploadTask.prototype._notifyObserver = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this._state);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    var valid = this._state === InternalTaskState.PAUSED || this._state === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    var valid = this._state === InternalTaskState.RUNNING;\n\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    var valid = this._state === InternalTaskState.RUNNING || this._state === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  function Reference(_service, location) {\n    this._service = _service;\n\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * @returns The URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  };\n\n  Reference.prototype.newRef = function (service, location) {\n    return new Reference(service, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * @returns An reference to the root of this\r\n     *     object's bucket.\r\n     */\n    get: function get() {\n      var location = new Location(this._location.bucket, '');\n      return this.newRef(this._service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    get: function get() {\n      return this._location.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    get: function get() {\n      return this._location.path;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    get: function get() {\n      return lastComponent(this._location.path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    get: function get() {\n      return this._service;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      var newPath = parent(this._location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this._location.bucket, newPath);\n      return new Reference(this._service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Reference.prototype._throwIfRoot = function (name) {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * Uploads a blob to this object's location.\r\n * @public\r\n * @param ref - Storage Reference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns An UploadTask that lets you control and\r\n *     observe the upload.\r\n */\n\n\nfunction uploadBytesResumable(ref, data, metadata) {\n  if (metadata === void 0) {\n    metadata = null;\n  }\n\n  ref._throwIfRoot('uploadBytesResumable');\n\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n/**\r\n * Uploads a string to this object's location.\r\n * @public\r\n * @param ref - Storage Reference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded object.\r\n * @returns An UploadTask that lets you control and\r\n *     observe the upload.\r\n */\n\n\nfunction uploadString(ref, value, format, metadata) {\n  if (format === void 0) {\n    format = StringFormat.RAW;\n  }\n\n  ref._throwIfRoot('putString');\n\n  var data = dataFromString(format, value);\n\n  var metadataClone = __assign({}, metadata);\n\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType;\n  }\n\n  return new UploadTask(ref, new FbsBlob(data.data, true), metadataClone);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - Storage Reference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\n\n\nfunction listAll(ref) {\n  var accumulator = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(function () {\n    return accumulator;\n  });\n}\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @internal\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\n\n\nfunction listAllHelper(ref, accumulator, pageToken) {\n  return __awaiter(this, void 0, void 0, function () {\n    var opt, nextPage;\n\n    var _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          opt = {\n            // maxResults is 1000 by default.\n            pageToken: pageToken\n          };\n          return [4\n          /*yield*/\n          , list$1(ref, opt)];\n\n        case 1:\n          nextPage = _c.sent();\n\n          (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n\n          (_b = accumulator.items).push.apply(_b, nextPage.items);\n\n          if (!(nextPage.nextPageToken != null)) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , listAllHelper(ref, accumulator, nextPage.nextPageToken)];\n\n        case 2:\n          _c.sent();\n\n          _c.label = 3;\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - Storage Reference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\n\n\nfunction list$1(ref, options) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, op, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (options != null) {\n            if (typeof options.maxResults === 'number') {\n              validateNumber('options.maxResults',\n              /* minValue= */\n              1,\n              /* maxValue= */\n              1000, options.maxResults);\n            }\n          }\n\n          return [4\n          /*yield*/\n          , ref.storage.getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          op = options || {};\n          requestInfo = list(ref.storage, ref._location,\n          /*delimiter= */\n          '/', op.pageToken, op.maxResults);\n          return [2\n          /*return*/\n          , ref.storage.makeRequest(requestInfo, authToken).getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - Storage Reference to get metadata from.\r\n */\n\n\nfunction getMetadata$1(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('getMetadata');\n\n          return [4\n          /*yield*/\n          , ref.storage.getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          requestInfo = getMetadata(ref.storage, ref._location, getMappings());\n          return [2\n          /*return*/\n          , ref.storage.makeRequest(requestInfo, authToken).getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - Storage Reference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\n\n\nfunction updateMetadata$1(ref, metadata) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('updateMetadata');\n\n          return [4\n          /*yield*/\n          , ref.storage.getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          requestInfo = updateMetadata(ref.storage, ref._location, metadata, getMappings());\n          return [2\n          /*return*/\n          , ref.storage.makeRequest(requestInfo, authToken).getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\n\n\nfunction getDownloadURL(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('getDownloadURL');\n\n          return [4\n          /*yield*/\n          , ref.storage.getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\n          return [2\n          /*return*/\n          , ref.storage.makeRequest(requestInfo, authToken).getPromise().then(function (url) {\n            if (url === null) {\n              throw noDownloadURL();\n            }\n\n            return url;\n          })];\n      }\n    });\n  });\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - Storage Reference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\n\n\nfunction deleteObject$1(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('deleteObject');\n\n          return [4\n          /*yield*/\n          , ref.storage.getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          requestInfo = deleteObject(ref.storage, ref._location);\n          return [2\n          /*return*/\n          , ref.storage.makeRequest(requestInfo, authToken).getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n * @internal\r\n *\r\n * @param ref - Storage Reference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n */\n\n\nfunction getChild(ref, childPath) {\n  var newPath = child(ref._location.path, childPath);\n  var location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar UploadTaskSnapshotCompat =\n/** @class */\nfunction () {\n  function UploadTaskSnapshotCompat(_delegate, task, ref) {\n    this._delegate = _delegate;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\n    get: function get() {\n      return this._delegate.bytesTransferred;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\n    get: function get() {\n      return this._delegate.metadata;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\n    get: function get() {\n      return this._delegate.state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\n    get: function get() {\n      return this._delegate.totalBytes;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return UploadTaskSnapshotCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar UploadTaskCompat =\n/** @class */\nfunction () {\n  function UploadTaskCompat(_delegate, _ref) {\n    this._delegate = _delegate;\n    this._ref = _ref;\n    this.cancel = this._delegate.cancel.bind(this._delegate);\n    this.catch = this._delegate.catch.bind(this._delegate);\n    this.pause = this._delegate.pause.bind(this._delegate);\n    this.resume = this._delegate.resume.bind(this._delegate);\n    this._snapshot = new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\n  }\n\n  Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\n    get: function get() {\n      return this._snapshot;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\n    var _this = this;\n\n    return this._delegate.then(function (snapshot) {\n      if (onFulfilled) {\n        return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\n      }\n    }, onRejected);\n  };\n\n  UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\n    var _this = this;\n\n    var wrappedNextOrObserver = undefined;\n\n    if (!!nextOrObserver) {\n      if (typeof nextOrObserver === 'function') {\n        wrappedNextOrObserver = function wrappedNextOrObserver(taskSnapshot) {\n          return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\n        };\n      } else {\n        wrappedNextOrObserver = {\n          next: !!nextOrObserver.next ? function (taskSnapshot) {\n            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\n          } : undefined,\n          complete: nextOrObserver.complete || undefined,\n          error: nextOrObserver.error || undefined\n        };\n      }\n    }\n\n    return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\n  };\n\n  return UploadTaskCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ListResultCompat =\n/** @class */\nfunction () {\n  function ListResultCompat(_delegate, _service) {\n    this._delegate = _delegate;\n    this._service = _service;\n  }\n\n  Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\n    get: function get() {\n      var _this = this;\n\n      return this._delegate.prefixes.map(function (ref) {\n        return new ReferenceCompat(ref, _this._service);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ListResultCompat.prototype, \"items\", {\n    get: function get() {\n      var _this = this;\n\n      return this._delegate.items.map(function (ref) {\n        return new ReferenceCompat(ref, _this._service);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\n    get: function get() {\n      return this._delegate.nextPageToken || null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ListResultCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ReferenceCompat =\n/** @class */\nfunction () {\n  function ReferenceCompat(_delegate, storage) {\n    this._delegate = _delegate;\n    this.storage = storage;\n  }\n\n  Object.defineProperty(ReferenceCompat.prototype, \"name\", {\n    get: function get() {\n      return this._delegate.name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\n    get: function get() {\n      return this._delegate.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\n    get: function get() {\n      return this._delegate.fullPath;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ReferenceCompat.prototype.toString = function () {\n    return this._delegate.toString();\n  };\n  /**\r\n   * @returns A reference to the object obtained by\r\n   * appending childPath, removing any duplicate, beginning, or trailing\r\n   * slashes.\r\n   */\n\n\n  ReferenceCompat.prototype.child = function (childPath) {\n    var reference = getChild(this._delegate, childPath);\n    return new ReferenceCompat(reference, this.storage);\n  };\n\n  Object.defineProperty(ReferenceCompat.prototype, \"root\", {\n    get: function get() {\n      return new ReferenceCompat(this._delegate.root, this.storage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\n    /**\r\n     * @returns A reference to the parent of the\r\n     * current object, or null if the current object is the root.\r\n     */\n    get: function get() {\n      var reference = this._delegate.parent;\n\n      if (reference == null) {\n        return null;\n      }\n\n      return new ReferenceCompat(reference, this.storage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data - The blob to upload.\r\n   * @returns An UploadTask that lets you control and\r\n   * observe the upload.\r\n   */\n\n  ReferenceCompat.prototype.put = function (data, metadata) {\n    this._throwIfRoot('put');\n\n    return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value - The string to upload.\r\n   * @param format - The format of the string to upload.\r\n   * @returns An UploadTask that lets you control and\r\n   * observe the upload.\r\n   */\n\n\n  ReferenceCompat.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    this._throwIfRoot('putString');\n\n    return new UploadTaskCompat(uploadString(this._delegate, value, format, metadata), this);\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @returns A Promise that resolves with all the items and prefixes under\r\n   *  the current storage reference. `prefixes` contains references to\r\n   *  sub-directories and `items` contains references to objects in this\r\n   *  folder. `nextPageToken` is never returned.\r\n   */\n\n\n  ReferenceCompat.prototype.listAll = function () {\n    var _this = this;\n\n    return listAll(this._delegate).then(function (r) {\n      return new ListResultCompat(r, _this.storage);\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options - See ListOptions for details.\r\n   * @returns A Promise that resolves with the items and prefixes.\r\n   * `prefixes` contains references to sub-folders and `items`\r\n   * contains references to objects in this folder. `nextPageToken`\r\n   * can be used to get the rest of the results.\r\n   */\n\n\n  ReferenceCompat.prototype.list = function (options) {\n    var _this = this;\n\n    return list$1(this._delegate, options).then(function (r) {\n      return new ListResultCompat(r, _this.storage);\n    });\n  };\n  /**\r\n   * A promise that resolves with the metadata for this object. If this\r\n   * object doesn't exist or metadata cannot be retreived, the promise is\r\n   * rejected.\r\n   */\n\n\n  ReferenceCompat.prototype.getMetadata = function () {\n    return getMetadata$1(this._delegate);\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata - The new metadata for the object.\r\n   * Only values that have been explicitly set will be changed. Explicitly\r\n   * setting a value to null will remove the metadata.\r\n   * @returns A promise that resolves\r\n   * with the new metadata for this object.\r\n   * @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  ReferenceCompat.prototype.updateMetadata = function (metadata) {\n    return updateMetadata$1(this._delegate, metadata);\n  };\n  /**\r\n   * @returns A promise that resolves with the download\r\n   * URL for this object.\r\n   */\n\n\n  ReferenceCompat.prototype.getDownloadURL = function () {\n    return getDownloadURL(this._delegate);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @returns A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  ReferenceCompat.prototype.delete = function () {\n    this._throwIfRoot('delete');\n\n    return deleteObject$1(this._delegate);\n  };\n\n  ReferenceCompat.prototype._throwIfRoot = function (name) {\n    if (this._delegate._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return ReferenceCompat;\n}();\n/**\r\n * A request whose promise always fails.\r\n */\n\n\nvar FailRequest =\n/** @class */\nfunction () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (_appDelete) {};\n\n  return FailRequest;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false;\n\n  function triggerCallback() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function handler(success) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NetworkRequest =\n/** @class */\nfunction () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough - True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var xhr = status.xhr;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.serverResponse = xhr.getResponseText();\n\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\n\n\nvar RequestEndStatus =\n/** @class */\nfunction () {\n  function RequestEndStatus(wasSuccessCode, xhr, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers) {\n  var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nfunction makeRequest(requestInfo, appId, authToken, pool) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isUrl(path) {\n  return /^[A-Za-z]+:\\/\\//.test(path);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\n\n\nfunction refFromURL(service, url) {\n  return new Reference(service, url);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\n\n\nfunction refFromPath(ref, path) {\n  if (ref instanceof StorageService) {\n    var service = ref;\n\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n\n    var reference = new Reference(service, service._bucket);\n\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      if (path.includes('..')) {\n        throw invalidArgument('`path` param cannot contain \"..\"');\n      }\n\n      return getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\nfunction ref(serviceOrRef, pathOrUrl) {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof StorageService) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(config) {\n  var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n\n  if (bucketString == null) {\n    return null;\n  }\n\n  return Location.makeFromBucketSpec(bucketString);\n}\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\n\n\nvar StorageService =\n/** @class */\nfunction () {\n  function StorageService(app,\n  /**\r\n   * @internal\r\n   */\n  _authProvider,\n  /**\r\n   * @internal\r\n   */\n  _pool,\n  /**\r\n   * @internal\r\n   */\n  _url) {\n    this.app = app;\n    this._authProvider = _authProvider;\n    this._pool = _pool;\n    this._url = _url;\n    /**\r\n     * @internal\r\n     */\n\n    this._bucket = null;\n    this._appId = null;\n    this._deleted = false;\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url);\n    } else {\n      this._bucket = extractBucket(this.app.options);\n    }\n  }\n\n  Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\n    get: function get() {\n      return this._maxUploadRetryTime;\n    },\n    set: function set(time) {\n      validateNumber('time',\n      /* minValue=*/\n      0,\n      /* maxValue= */\n      Number.POSITIVE_INFINITY, time);\n      this._maxUploadRetryTime = time;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\n    get: function get() {\n      return this._maxOperationRetryTime;\n    },\n    set: function set(time) {\n      validateNumber('time',\n      /* minValue=*/\n      0,\n      /* maxValue= */\n      Number.POSITIVE_INFINITY, time);\n      this._maxOperationRetryTime = time;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StorageService.prototype.getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var auth, tokenData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            auth = this._authProvider.getImmediate({\n              optional: true\n            });\n            if (!auth) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , auth.getToken()];\n\n          case 1:\n            tokenData = _a.sent();\n\n            if (tokenData !== null) {\n              return [2\n              /*return*/\n              , tokenData.accessToken];\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   * @internal\r\n   */\n\n\n  StorageService.prototype._delete = function () {\n    this._deleted = true;\n\n    this._requests.forEach(function (request) {\n      return request.cancel();\n    });\n\n    this._requests.clear();\n\n    return Promise.resolve();\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n   * at the given Location.\r\n   */\n\n\n  StorageService.prototype.makeStorageReference = function (loc) {\n    return new Reference(this, loc);\n  };\n  /**\r\n   * @internal\r\n   * @param requestInfo - HTTP RequestInfo object\r\n   * @param authToken - Firebase auth token\r\n   */\n\n\n  StorageService.prototype.makeRequest = function (requestInfo, authToken) {\n    var _this = this;\n\n    if (!this._deleted) {\n      var request_1 = makeRequest(requestInfo, this._appId, authToken, this._pool);\n\n      this._requests.add(request_1); // Request removes itself from set when complete.\n\n\n      request_1.getPromise().then(function () {\n        return _this._requests.delete(request_1);\n      }, function () {\n        return _this._requests.delete(request_1);\n      });\n      return request_1;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n\n  return StorageService;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\n\n\nvar StorageServiceCompat =\n/** @class */\nfunction () {\n  function StorageServiceCompat(app, _delegate) {\n    var _this = this;\n\n    this.app = app;\n    this._delegate = _delegate;\n    this.INTERNAL = {\n      /**\r\n       * Called when the associated app is deleted.\r\n       */\n      delete: function _delete() {\n        return _this._delegate._delete();\n      }\n    };\n  }\n\n  Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\n    get: function get() {\n      return this._delegate.maxOperationRetryTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\n    get: function get() {\n      return this._delegate.maxUploadRetryTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n  StorageServiceCompat.prototype.ref = function (path) {\n    if (isUrl(path)) {\n      throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\n    }\n\n    return new ReferenceCompat(ref(this._delegate, path), this);\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  StorageServiceCompat.prototype.refFromURL = function (url) {\n    if (!isUrl(url)) {\n      throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\n    }\n\n    try {\n      Location.makeFromUrl(url);\n    } catch (e) {\n      throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\n    }\n\n    return new ReferenceCompat(ref(this._delegate, url), this);\n  };\n\n  StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\n    this._delegate.maxUploadRetryTime = time;\n  };\n\n  StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\n    this._delegate.maxOperationRetryTime = time;\n  };\n\n  return StorageServiceCompat;\n}();\n\nvar name = \"@firebase/storage\";\nvar version = \"0.4.2\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(container, url) {\n  // Dependencies\n  // TODO: This should eventually be 'app-compat'\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal'); // TODO: get StorageService instance from component framework instead\n  // of creating a new one.\n\n  var storageServiceCompat = new StorageServiceCompat(app, new StorageService(app, authProvider, new XhrIoPool(), url));\n  return storageServiceCompat;\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: StorageService,\n    Reference: ReferenceCompat\n  };\n  instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase);\nexport { registerStorage };"],"sourceRoot":""}