{"version":3,"sources":["webpack:///./node_modules/@firebase/functions/dist/index.esm.js"],"names":["errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","_super","HttpsErrorImpl","code","message","details","_this","call","this","Object","setPrototypeOf","prototype","Error","ContextProvider","authProvider","messagingProvider","auth","messaging","getImmediate","optional","get","then","getAuthToken","token","_a","label","undefined","trys","push","getToken","sent","accessToken","getInstanceIdToken","self","Notification","permission","e","getContext","authToken","instanceIdToken","mapValues","o","f","result","key","hasOwnProperty","Serializer","encode","data","Number","valueOf","isFinite","toString","Array","isArray","map","x","decode","json","value","isNaN","Service","app_","regionOrCustomDomain_","fetchImpl","serializer","emulatorOrigin","delete","Promise","resolve","deleteService","contextProvider","cancelAllRequests","url","URL","customDomain","origin","region","defineProperty","enumerable","configurable","_url","name","projectId","options","useEmulator","host","port","useFunctionsEmulator","httpsCallable","postJSON","body","headers","response","method","JSON","stringify","status","context","timeout","timer","failAfterPromise","error","responseData","_b","millis","promise","_","reject","setTimeout","failAfter","race","clearTimeoutWrapper","bodyJSON","codeForHTTPStatus","description","errorJSON","status_1","_errorForResponse","clearTimeout","instance","namespaceExports","fetch","bind","Functions","registerComponent","container","regionOrCustomDomain","app","getProvider","setServiceProps","setMultipleInstances","registerVersion"],"mappings":"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","file":"16-8df09d06168499be87dd.js","sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator } from 'tslib';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\n\nvar errorCodeMap = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\n\nvar HttpsErrorImpl =\n/** @class */\nfunction (_super) {\n  __extends(HttpsErrorImpl, _super);\n\n  function HttpsErrorImpl(code, message, details) {\n    var _this = _super.call(this, message) || this; // This is a workaround for a bug in TypeScript when extending Error:\n    // tslint:disable-next-line\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n\n    Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\n    _this.code = code;\n    _this.details = details;\n    return _this;\n  }\n\n  return HttpsErrorImpl;\n}(Error);\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\n\n\nfunction codeForHTTPStatus(status) {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n\n    case 400:\n      return 'invalid-argument';\n\n    case 401:\n      return 'unauthenticated';\n\n    case 403:\n      return 'permission-denied';\n\n    case 404:\n      return 'not-found';\n\n    case 409:\n      return 'aborted';\n\n    case 429:\n      return 'resource-exhausted';\n\n    case 499:\n      return 'cancelled';\n\n    case 500:\n      return 'internal';\n\n    case 501:\n      return 'unimplemented';\n\n    case 503:\n      return 'unavailable';\n\n    case 504:\n      return 'deadline-exceeded';\n  }\n\n  return 'unknown';\n}\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\n\n\nfunction _errorForResponse(status, bodyJSON, serializer) {\n  var code = codeForHTTPStatus(status); // Start with reasonable defaults from the status code.\n\n  var description = code;\n  var details = undefined; // Then look through the body for explicit details.\n\n  try {\n    var errorJSON = bodyJSON && bodyJSON.error;\n\n    if (errorJSON) {\n      var status_1 = errorJSON.status;\n\n      if (typeof status_1 === 'string') {\n        if (!errorCodeMap[status_1]) {\n          // They must've included an unknown error code in the body.\n          return new HttpsErrorImpl('internal', 'internal');\n        }\n\n        code = errorCodeMap[status_1]; // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n\n        description = status_1;\n      }\n\n      var message = errorJSON.message;\n\n      if (typeof message === 'string') {\n        description = message;\n      }\n\n      details = errorJSON.details;\n\n      if (details !== undefined) {\n        details = serializer.decode(details);\n      }\n    }\n  } catch (e) {// If we couldn't parse explicit error data, that's fine.\n  }\n\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n\n  return new HttpsErrorImpl(code, description, details);\n}\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\n\n\nvar ContextProvider =\n/** @class */\nfunction () {\n  function ContextProvider(authProvider, messagingProvider) {\n    var _this = this;\n\n    this.auth = null;\n    this.messaging = null;\n    this.auth = authProvider.getImmediate({\n      optional: true\n    });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth) {\n      authProvider.get().then(function (auth) {\n        return _this.auth = auth;\n      }, function () {\n        /* get() never rejects */\n      });\n    }\n\n    if (!this.messaging) {\n      messagingProvider.get().then(function (messaging) {\n        return _this.messaging = messaging;\n      }, function () {\n        /* get() never rejects */\n      });\n    }\n  }\n\n  ContextProvider.prototype.getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var token, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.auth) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.auth.getToken()];\n\n          case 2:\n            token = _a.sent();\n\n            if (!token) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            return [2\n            /*return*/\n            , token.accessToken];\n\n          case 3:\n            e_1 = _a.sent(); // If there's any error when trying to get the auth token, leave it off.\n\n            return [2\n            /*return*/\n            , undefined];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ContextProvider.prototype.getInstanceIdToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (!this.messaging || !('Notification' in self) || Notification.permission !== 'granted') {\n          return [2\n          /*return*/\n          , undefined];\n        }\n\n        try {\n          return [2\n          /*return*/\n          , this.messaging.getToken()];\n        } catch (e) {\n          // We don't warn on this, because it usually means messaging isn't set up.\n          // console.warn('Failed to retrieve instance id token.', e);\n          // If there's any error when trying to get the token, leave it off.\n          return [2\n          /*return*/\n          , undefined];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  ContextProvider.prototype.getContext = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var authToken, instanceIdToken;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getAuthToken()];\n\n          case 1:\n            authToken = _a.sent();\n            return [4\n            /*yield*/\n            , this.getInstanceIdToken()];\n\n          case 2:\n            instanceIdToken = _a.sent();\n            return [2\n            /*return*/\n            , {\n              authToken: authToken,\n              instanceIdToken: instanceIdToken\n            }];\n        }\n      });\n    });\n  };\n\n  return ContextProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues( // { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no, f) {\n  var result = {};\n\n  for (var key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n\n  return result;\n}\n\nvar Serializer =\n/** @class */\nfunction () {\n  function Serializer() {} // Takes data and encodes it in a JSON-friendly way, such that types such as\n  // Date are preserved.\n\n\n  Serializer.prototype.encode = function (data) {\n    var _this = this;\n\n    if (data == null) {\n      return null;\n    }\n\n    if (data instanceof Number) {\n      data = data.valueOf();\n    }\n\n    if (typeof data === 'number' && isFinite(data)) {\n      // Any number in JS is safe to put directly in JSON and parse as a double\n      // without any loss of precision.\n      return data;\n    }\n\n    if (data === true || data === false) {\n      return data;\n    }\n\n    if (Object.prototype.toString.call(data) === '[object String]') {\n      return data;\n    }\n\n    if (Array.isArray(data)) {\n      return data.map(function (x) {\n        return _this.encode(x);\n      });\n    }\n\n    if (typeof data === 'function' || typeof data === 'object') {\n      return mapValues(data, function (x) {\n        return _this.encode(x);\n      });\n    } // If we got this far, the data is not encodable.\n\n\n    throw new Error('Data cannot be encoded in JSON: ' + data);\n  }; // Takes data that's been encoded in a JSON-friendly form and returns a form\n  // with richer datatypes, such as Dates, etc.\n\n\n  Serializer.prototype.decode = function (json) {\n    var _this = this;\n\n    if (json == null) {\n      return json;\n    }\n\n    if (json['@type']) {\n      switch (json['@type']) {\n        case LONG_TYPE: // Fall through and handle this the same as unsigned.\n\n        case UNSIGNED_LONG_TYPE:\n          {\n            // Technically, this could work return a valid number for malformed\n            // data if there was a number followed by garbage. But it's just not\n            // worth all the extra code to detect that case.\n            var value = Number(json['value']);\n\n            if (isNaN(value)) {\n              throw new Error('Data cannot be decoded from JSON: ' + json);\n            }\n\n            return value;\n          }\n\n        default:\n          {\n            throw new Error('Data cannot be decoded from JSON: ' + json);\n          }\n      }\n    }\n\n    if (Array.isArray(json)) {\n      return json.map(function (x) {\n        return _this.decode(x);\n      });\n    }\n\n    if (typeof json === 'function' || typeof json === 'object') {\n      return mapValues(json, function (x) {\n        return _this.decode(x);\n      });\n    } // Anything else is safe to return.\n\n\n    return json;\n  };\n\n  return Serializer;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\n\n\nfunction failAfter(millis) {\n  var timer;\n  var promise = new Promise(function (_, reject) {\n    timer = setTimeout(function () {\n      reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\n    }, millis);\n  });\n  return {\n    timer: timer,\n    promise: promise\n  };\n}\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\n\n\nvar Service =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Functions service for the given app and (optional) region or custom domain.\r\n   * @param app_ The FirebaseApp to use.\r\n   * @param regionOrCustomDomain_ one of:\r\n   *   a) A region to call functions from, such as us-central1\r\n   *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\r\n   */\n  function Service(app_, authProvider, messagingProvider, regionOrCustomDomain_, fetchImpl) {\n    var _this = this;\n\n    if (regionOrCustomDomain_ === void 0) {\n      regionOrCustomDomain_ = 'us-central1';\n    }\n\n    this.app_ = app_;\n    this.fetchImpl = fetchImpl;\n    this.serializer = new Serializer();\n    this.emulatorOrigin = null;\n    this.INTERNAL = {\n      delete: function _delete() {\n        return Promise.resolve(_this.deleteService());\n      }\n    };\n    this.contextProvider = new ContextProvider(authProvider, messagingProvider); // Cancels all ongoing requests when resolved.\n\n    this.cancelAllRequests = new Promise(function (resolve) {\n      _this.deleteService = function () {\n        return resolve();\n      };\n    }); // Resolve the region or custom domain overload by attempting to parse it.\n\n    try {\n      var url = new URL(regionOrCustomDomain_);\n      this.customDomain = url.origin;\n      this.region = 'us-central1';\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain_;\n    }\n  }\n\n  Object.defineProperty(Service.prototype, \"app\", {\n    get: function get() {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the URL for a callable with the given name.\r\n   * @param name The name of the callable.\r\n   */\n\n  Service.prototype._url = function (name) {\n    var projectId = this.app_.options.projectId;\n\n    if (this.emulatorOrigin !== null) {\n      var origin_1 = this.emulatorOrigin;\n      return origin_1 + \"/\" + projectId + \"/\" + this.region + \"/\" + name;\n    }\n\n    if (this.customDomain !== null) {\n      return this.customDomain + \"/\" + name;\n    }\n\n    return \"https://\" + this.region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\n  };\n  /**\r\n   * Modify this instance to communicate with the Cloud Functions emulator.\r\n   *\r\n   * Note: this must be called before this instance has been used to do any operations.\r\n   *\r\n   * @param host The emulator host (ex: localhost)\r\n   * @param port The emulator port (ex: 5001)\r\n   */\n\n\n  Service.prototype.useEmulator = function (host, port) {\n    this.emulatorOrigin = \"http://\" + host + \":\" + port;\n  };\n  /**\r\n   * Changes this instance to point to a Cloud Functions emulator running\r\n   * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n   *\r\n   * @deprecated Prefer the useEmulator(host, port) method.\r\n   * @param origin The origin of the local emulator, such as\r\n   * \"http://localhost:5005\".\r\n   */\n\n\n  Service.prototype.useFunctionsEmulator = function (origin) {\n    this.emulatorOrigin = origin;\n  };\n  /**\r\n   * Returns a reference to the callable https trigger with the given name.\r\n   * @param name The name of the trigger.\r\n   */\n\n\n  Service.prototype.httpsCallable = function (name, options) {\n    var _this = this;\n\n    return function (data) {\n      return _this.call(name, data, options || {});\n    };\n  };\n  /**\r\n   * Does an HTTP POST and returns the completed response.\r\n   * @param url The url to post to.\r\n   * @param body The JSON body of the post.\r\n   * @param headers The HTTP headers to include in the request.\r\n   * @return A Promise that will succeed when the request finishes.\r\n   */\n\n\n  Service.prototype.postJSON = function (url, body, headers) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response, e_1, json, e_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            headers['Content-Type'] = 'application/json';\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.fetchImpl(url, {\n              method: 'POST',\n              body: JSON.stringify(body),\n              headers: headers\n            })];\n\n          case 2:\n            response = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _a.sent(); // This could be an unhandled error on the backend, or it could be a\n            // network error. There's no way to know, since an unhandled error on the\n            // backend will fail to set the proper CORS header, and thus will be\n            // treated as a network error by fetch.\n\n            return [2\n            /*return*/\n            , {\n              status: 0,\n              json: null\n            }];\n\n          case 4:\n            json = null;\n            _a.label = 5;\n\n          case 5:\n            _a.trys.push([5, 7,, 8]);\n\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 6:\n            json = _a.sent();\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            e_2 = _a.sent();\n            return [3\n            /*break*/\n            , 8];\n\n          case 8:\n            return [2\n            /*return*/\n            , {\n              status: response.status,\n              json: json\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Calls a callable function asynchronously and returns the result.\r\n   * @param name The name of the callable trigger.\r\n   * @param data The data to pass as params to the function.s\r\n   */\n\n\n  Service.prototype.call = function (name, data, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var url, body, headers, context, timeout, _a, timer, failAfterPromise, response, error, responseData, decodedData;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            url = this._url(name); // Encode any special types, such as dates, in the input data.\n\n            data = this.serializer.encode(data);\n            body = {\n              data: data\n            };\n            headers = {};\n            return [4\n            /*yield*/\n            , this.contextProvider.getContext()];\n\n          case 1:\n            context = _b.sent();\n\n            if (context.authToken) {\n              headers['Authorization'] = 'Bearer ' + context.authToken;\n            }\n\n            if (context.instanceIdToken) {\n              headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\n            }\n\n            timeout = options.timeout || 70000;\n            _a = failAfter(timeout), timer = _a.timer, failAfterPromise = _a.promise;\n            return [4\n            /*yield*/\n            , Promise.race([clearTimeoutWrapper(timer, this.postJSON(url, body, headers)), failAfterPromise, clearTimeoutWrapper(timer, this.cancelAllRequests)])];\n\n          case 2:\n            response = _b.sent(); // If service was deleted, interrupted response throws an error.\n\n            if (!response) {\n              throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\n            }\n\n            error = _errorForResponse(response.status, response.json, this.serializer);\n\n            if (error) {\n              throw error;\n            }\n\n            if (!response.json) {\n              throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\n            }\n\n            responseData = response.json.data; // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n            // backwards compatibility.\n\n            if (typeof responseData === 'undefined') {\n              responseData = response.json.result;\n            }\n\n            if (typeof responseData === 'undefined') {\n              // Consider the response malformed.\n              throw new HttpsErrorImpl('internal', 'Response is missing data field.');\n            }\n\n            decodedData = this.serializer.decode(responseData);\n            return [2\n            /*return*/\n            , {\n              data: decodedData\n            }];\n        }\n      });\n    });\n  };\n\n  return Service;\n}();\n\nfunction clearTimeoutWrapper(timer, promise) {\n  return __awaiter(this, void 0, void 0, function () {\n    var result;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , promise];\n\n        case 1:\n          result = _a.sent(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          clearTimeout(timer);\n          return [2\n          /*return*/\n          , result];\n      }\n    });\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Functions.\r\n */\n\n\nvar FUNCTIONS_TYPE = 'functions';\n\nfunction registerFunctions(instance, fetchImpl) {\n  var namespaceExports = {\n    // no-inline\n    Functions: Service\n  };\n\n  function factory(container, regionOrCustomDomain) {\n    // Dependencies\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    var messagingProvider = container.getProvider('messaging'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    return new Service(app, authProvider, messagingProvider, regionOrCustomDomain, fetchImpl);\n  }\n\n  instance.INTERNAL.registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n}\n\nvar name = \"@firebase/functions\";\nvar version = \"0.6.1\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nregisterFunctions(firebase, fetch.bind(self));\nfirebase.registerVersion(name, version);"],"sourceRoot":""}